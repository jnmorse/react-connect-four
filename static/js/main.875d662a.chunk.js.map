{"version":3,"sources":["components/StatusDisplay/status-display.module.css","actions/types.js","reducers/game-reducer.js","reducers/index.js","reducers/status-reducer.js","store/index.js","components/Layout/Layout.js","components/StatusDisplay/status-display.js","components/StatusDisplay/index.js","components/GameBoard/game-board.jsx","components/GameBoard/index.js","components/App/App.js","index.js","components/GameBoard/game-board.module.css"],"names":["module","exports","root","typeValidator","get","obj","prop","TypeError","concat","Proxy","GAME_WON","GAME_LOSS","GAME_TIED","RESET_GAME","require","defaultState","board","Array","fill","combineReducers","status","state","arguments","length","undefined","type","game","Object","objectSpread","store","createStore","reducers","applyMiddleware","thunk","Layout","_ref","children","title","subtitle","react_default","a","createElement","Fragment","style","marginBottom","marginTop","textAlign","defaultProps","StatusDisplay","className","connect","boardKey","x","y","JSON","stringify","GameBoard","boardSize","showBoard","map","column","cell","key","cx","cy","r","width","height","viewBox","styles","cells","App","es","components_Layout_Layout","components_StatusDisplay","components_GameBoard","mountPoint","document","getElementById","render","components_App_App"],"mappings":"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","file":"static/js/main.875d662a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"status-display_root__2KbtR\"};","const types = {\n  GAME_WON: 'GAME_WON',\n  GAME_LOSS: 'GAME_LOSS',\n  GAME_TIED: 'GAME_TIED',\n  RESET_GAME: 'RESET_GAME'\n}\n\nconst typeValidator = {\n  get(obj, prop) {\n    if (obj[prop]) {\n      return obj[prop]\n    }\n\n    throw new TypeError(`${prop} is not a valid action type`)\n  }\n}\n\nmodule.exports = new Proxy(types, typeValidator)\n","const { GAME_WON } = require('../actions/types')\n\nexport const defaultState = {\n  board: Array(7).fill(Array(6).fill(0))\n}\n\nexport default function gameReducer(state = defaultState, action) {\n  switch (action.type) {\n    case GAME_WON: {\n      return { ...state, status: 'won' }\n    }\n\n    default: {\n      return { ...state }\n    }\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport gameReducer from './game-reducer'\nimport statusReducer from './status-reducer'\n\nexport default combineReducers({\n  status: statusReducer,\n  game: gameReducer\n})\n","export default function statusReducer(state = false, action) {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from '../reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nexport default store\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Layout = ({ children, title, subtitle }) => (\n  <>\n    <header style={{ marginBottom: '1em' }}>\n      <h1>{title}</h1>\n      {subtitle()}\n    </header>\n\n    <main>{children}</main>\n\n    <footer style={{ marginTop: '1em', textAlign: 'center' }}>\n      <small>&copy; 2019; Joseph Morse; MIT</small>\n    </footer>\n  </>\n)\n\nLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.func,\n  children: PropTypes.node.isRequired\n}\n\nLayout.defaultProps = {\n  subtitle: () => null\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { root } from './status-display.module.css'\n\nconst StatusDisplay = ({ status }) => {\n  if (status) {\n    return <div className={root}>{status}</div>\n  }\n\n  return null\n}\n\nStatusDisplay.propTypes = {\n  status: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired\n}\n\nexport default StatusDisplay\n","import { connect } from 'react-redux'\nimport StatusDisplay from './status-display'\n\nexport default connect(({ status }) => ({ status }))(StatusDisplay)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './game-board.module.css'\n\nfunction boardKey(x, y) {\n  return JSON.stringify({ x, y })\n}\n\nconst GameBoard = ({ board }) => {\n  const boardSize = {\n    width: 450,\n    height: 390\n  }\n  const offset = 40\n\n  const showBoard = board.map((column, x) =>\n    column.map((cell, y) => (\n      <circle\n        key={boardKey(x, y)}\n        cx={x * 60 + offset}\n        cy={y * 60 + offset}\n        r=\"20\"\n      />\n    ))\n  )\n\n  return (\n    <svg\n      width={boardSize.width}\n      height={boardSize.height}\n      viewBox={`0,0,${boardSize.width},${boardSize.height}`}\n      className={styles.root}\n    >\n      <g className={styles.board}>\n        <rect x=\"0\" y=\"0\" width={boardSize.width} height={boardSize.height} />\n      </g>\n      <g className={styles.cells}>{showBoard}</g>\n    </svg>\n  )\n}\n\nGameBoard.propTypes = {\n  board: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired\n}\n\nexport default GameBoard\n","import { connect } from 'react-redux'\nimport GameBoard from './game-board'\n\nfunction mapStateToProps(state) {\n  return {\n    board: state.game.board\n  }\n}\n\nexport default connect(mapStateToProps)(GameBoard)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from '../../store'\n\nimport Layout from '../Layout'\nimport StatusDisplay from '../StatusDisplay'\nimport GameBoard from '../GameBoard'\n\nconst App = () => (\n  <Provider store={store}>\n    <Layout title=\"Connect Four\">\n      <StatusDisplay />\n      <GameBoard board={[[]]} />\n    </Layout>\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport './style.css'\n\nimport App from './components/App'\n\nconst mountPoint = document.getElementById('root')\n\nrender(<App />, mountPoint)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"game-board_root__3V2aj\",\"board\":\"game-board_board__3RDyF\",\"cells\":\"game-board_cells__2arKi\"};"],"sourceRoot":""}