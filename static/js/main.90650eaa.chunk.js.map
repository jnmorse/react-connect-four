{"version":3,"sources":["components/StatusDisplay/status-display.module.css","components/Controls/Controls.module.css","actions/types.js","reducers/game-reducer.js","reducers/index.js","reducers/status-reducer.js","store/index.js","components/Layout/Layout.js","components/StatusDisplay/status-display.js","components/StatusDisplay/index.js","components/GameBoard/game-board.jsx","components/GameBoard/index.js","actions/index.js","components/Controls/Controls.js","components/Controls/index.js","components/SEO/index.js","components/App/App.js","index.js","components/GameBoard/game-board.module.css"],"names":["module","exports","root","__webpack_require__","r","__webpack_exports__","d","GAME_WON","GAME_LOSS","GAME_TIED","RESET_GAME","PLAYER_MOVE","require","defaultState","turn","lastMove","board","Array","fill","combineReducers","status","state","arguments","length","undefined","action","type","concat","payload","game","Object","objectSpread","newBoard","toConsumableArray","map","col","y","x","reduce","acc","cell","index","enhancer","composeWithDevTools","composeEnhancers","applyMiddleware","thunk","store","createStore","reducers","Layout","_ref","children","title","subtitle","react_default","a","createElement","Fragment","style","marginBottom","marginTop","textAlign","defaultProps","StatusDisplay","className","connect","boardKey","JSON","stringify","player","styles","cellPlayer1","cellPlayer2","cellDefault","min","num","Math","max","GameBoard","playerMove","gameWon","boardSize","start","end","lastTurn","count","checkHorizontalWin","showBoard","column","onClick","join","key","cx","cy","width","height","viewBox","cells","_ref$game","coords","Controls","resetGame","SEO","description","lang","keywords","twitterAuthor","Helmet","htmlAttributes","meta","name","content","property","App","es","components_Layout_Layout","components_SEO","components_StatusDisplay","components_GameBoard","components_Controls","mountPoint","document","getElementById","render","components_App_App"],"mappings":"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","file":"static/js/main.90650eaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"status-display_root__2KbtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Controls_root__24nkP\"};","const GAME_WON = 'game-won'\nconst GAME_LOSS = 'game-loss'\nconst GAME_TIED = 'game-tied'\nconst RESET_GAME = 'reset-game'\nconst PLAYER_MOVE = 'player-move'\n\nexport { GAME_WON, GAME_LOSS, GAME_TIED, RESET_GAME, PLAYER_MOVE }\n","const { GAME_WON, RESET_GAME, PLAYER_MOVE } = require('../actions/types')\n\nexport const defaultState = {\n  turn: 1,\n  lastMove: false,\n  board: Array(7).fill(Array(6).fill(0))\n}\n\nexport default function gameReducer(state = defaultState, action) {\n  switch (action.type) {\n    case GAME_WON: {\n      return { ...state, status: 'won' }\n    }\n\n    case RESET_GAME: {\n      return defaultState\n    }\n\n    case PLAYER_MOVE: {\n      const newBoard = [...state.board].map(col => [...col])\n\n      const y = newBoard[action.payload.x].reduce((acc, cell, index) => {\n        switch (cell) {\n          case 0: {\n            return index\n          }\n\n          default: {\n            return acc\n          }\n        }\n      }, false)\n\n      if (y !== false) {\n        newBoard[action.payload.x][y] = state.turn\n\n        return {\n          ...state,\n          board: newBoard,\n          turn: state.turn === 1 ? 2 : 1,\n          lastMove: { ...action.payload, y }\n        }\n      }\n\n      return { ...state }\n    }\n\n    default: {\n      return { ...state }\n    }\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport gameReducer from './game-reducer'\nimport statusReducer from './status-reducer'\n\nexport default combineReducers({\n  status: statusReducer,\n  game: gameReducer\n})\n","import { GAME_WON, RESET_GAME } from '../actions/types'\n\nexport default function statusReducer(state = false, action) {\n  switch (action.type) {\n    case RESET_GAME: {\n      return false\n    }\n\n    case GAME_WON: {\n      return `Player ${action.payload} won`\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport reducers from '../reducers'\n\nconst composeEnhancers = composeWithDevTools({})\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk)\n  // other store enhancers if any\n)\n\nconst store = createStore(reducers, enhancer)\n\nexport default store\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Layout = ({ children, title, subtitle }) => (\n  <>\n    <header style={{ marginBottom: '1em' }}>\n      <h1>{title}</h1>\n      {subtitle()}\n    </header>\n\n    <main>{children}</main>\n\n    <footer style={{ marginTop: '1em', textAlign: 'center' }}>\n      <small>&copy; 2019; Joseph Morse; MIT</small>\n    </footer>\n  </>\n)\n\nLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.func,\n  children: PropTypes.node.isRequired\n}\n\nLayout.defaultProps = {\n  subtitle: () => null\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { root } from './status-display.module.css'\n\nconst StatusDisplay = ({ status }) => {\n  if (status) {\n    return <div className={root}>{status}</div>\n  }\n\n  return null\n}\n\nStatusDisplay.propTypes = {\n  status: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired\n}\n\nexport default StatusDisplay\n","import { connect } from 'react-redux'\nimport StatusDisplay from './status-display'\n\nexport default connect(({ status }) => ({ status }))(StatusDisplay)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './game-board.module.css'\n\nfunction boardKey(x, y) {\n  return JSON.stringify({ x, y })\n}\n\nfunction fill(player) {\n  switch (player) {\n    case 1: {\n      return styles.cellPlayer1\n    }\n\n    case 2: {\n      return styles.cellPlayer2\n    }\n\n    default: {\n      return styles.cellDefault\n    }\n  }\n}\n\nconst min = num => Math.max(0, num)\nconst max = num => Math.min(6, num)\n\nfunction checkHorizontalWin(board, turn, lastMove) {\n  const start = min(lastMove.x - 3)\n  const end = max(lastMove.x + 3)\n  const lastTurn = turn === 1 ? 2 : 1\n\n  let count = 0\n\n  for (let x = start; x <= end; x += 1) {\n    if (board[x][lastMove.y] === lastTurn) {\n      count += 1\n\n      if (count === 4) {\n        return true\n      }\n    } else {\n      count = 0\n    }\n  }\n\n  return false\n}\n\n/* eslint-disable max-lines-per-function */\nconst GameBoard = ({ board, playerMove, gameWon, lastMove, turn }) => {\n  const boardSize = {\n    width: 450,\n    height: 390\n  }\n\n  const offset = 40\n\n  if (lastMove) {\n    if (checkHorizontalWin(board, turn, lastMove)) {\n      gameWon(turn === 1 ? 2 : 1)\n    }\n  }\n\n  const showBoard = board.map((column, x) =>\n    column.map((cell, y) => (\n      <circle\n        onClick={() => playerMove({ x, y })}\n        className={[styles.cell, fill(cell)].join(' ')}\n        key={boardKey(x, y)}\n        cx={x * 60 + offset}\n        cy={y * 60 + offset}\n        r=\"20\"\n      />\n    ))\n  )\n\n  return (\n    <svg\n      width={boardSize.width}\n      height={boardSize.height}\n      viewBox={`0,0,${boardSize.width},${boardSize.height}`}\n      className={styles.root}\n    >\n      <g className={styles.board}>\n        <rect x=\"0\" y=\"0\" width={boardSize.width} height={boardSize.height} />\n      </g>\n      <g className={styles.cells}>{showBoard}</g>\n    </svg>\n  )\n}\n/* eslint-enable max-lines-per-function */\n\nGameBoard.propTypes = {\n  board: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  playerMove: PropTypes.func.isRequired,\n  lastMove: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      x: PropTypes.number.isRequired,\n      y: PropTypes.number.isRequired\n    })\n  ]).isRequired,\n  turn: PropTypes.number.isRequired,\n  gameWon: PropTypes.func.isRequired\n}\n\nexport default GameBoard\n","import { connect } from 'react-redux'\nimport GameBoard from './game-board'\n\nimport { playerMove, gameWon } from '../../actions'\n\nconst mapStateToProps = ({ game: { board, lastMove, turn } }) => ({\n  board,\n  lastMove,\n  turn\n})\n\nexport default connect(\n  mapStateToProps,\n  { playerMove, gameWon }\n)(GameBoard)\n","import { RESET_GAME, PLAYER_MOVE, GAME_WON } from './types'\n\nfunction resetGame() {\n  return {\n    type: RESET_GAME\n  }\n}\n\nfunction gameWon(player) {\n  return {\n    type: GAME_WON,\n    payload: player\n  }\n}\n\nfunction playerMove(coords) {\n  return { type: PLAYER_MOVE, payload: coords }\n}\n\nexport { resetGame, playerMove, gameWon }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './Controls.module.css'\n\nconst Controls = ({ resetGame }) => (\n  <div className={styles.root}>\n    <button type=\"reset\" onClick={resetGame}>\n      Reset\n    </button>\n  </div>\n)\n\nControls.propTypes = {\n  resetGame: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import { connect } from 'react-redux'\n\nimport { resetGame } from '../../actions'\nimport Controls from './Controls'\n\nexport default connect(\n  null,\n  { resetGame }\n)(Controls)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\n\n/* eslint-disable max-lines-per-function */\n// Borrowed from Gatsby template\nfunction SEO({ title, description, lang, keywords, twitterAuthor }) {\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      meta={[\n        {\n          name: `description`,\n          content: description\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: description\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: twitterAuthor\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: description\n        }\n      ].concat(\n        keywords.length > 0\n          ? {\n              name: 'keywords',\n              content: keywords.join(', ')\n            }\n          : []\n      )}\n    />\n  )\n}\n/* eslint-enable max-lines-per-function */\n\nSEO.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  twitterAuthor: PropTypes.string\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  description: '',\n  twitterAuthor: 'tamed_lionheart',\n  keywords: []\n}\n\nexport default SEO\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from '../../store'\n\nimport Layout from '../Layout'\nimport StatusDisplay from '../StatusDisplay'\nimport GameBoard from '../GameBoard'\nimport Controls from '../Controls'\nimport SEO from '../SEO'\n\nconst App = () => (\n  <Provider store={store}>\n    <Layout title=\"Connect Four\">\n      <SEO\n        title=\"React Connect Four\"\n        description=\"Connect four game writting in React\"\n        keywords={['react', 'chingu', 'connect four']}\n      />\n      <StatusDisplay />\n      <GameBoard />\n      <Controls />\n    </Layout>\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport './style.css'\n\nimport App from './components/App'\n\nconst mountPoint = document.getElementById('root')\n\nrender(<App />, mountPoint)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"game-board_root__3V2aj\",\"board\":\"game-board_board__3RDyF\",\"cells\":\"game-board_cells__2arKi\",\"cell\":\"game-board_cell__3u1S6\",\"cellPlayer1\":\"game-board_cellPlayer1__2ufbv\",\"cellPlayer2\":\"game-board_cellPlayer2__dB7_7\"};"],"sourceRoot":""}